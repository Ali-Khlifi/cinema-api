# replace filmProjection to define the default model covered by this document, first letter must be uppercase
# replace filmProjection to define the default path of endpoints in this document, first letter must be lowercase
# add missing endpoints
# N.B. : must then be added to the pom to generate the controller and its associated models

openapi: '3.0.0'
info:
  description: 'FilmProjection API'
  version: '0.0.1'
  title: 'OpenAPI FilmProjection'
tags:
  - name: FilmProjection
paths:
  /filmProjection:
    get:
      tags:
        - FilmProjection
      summary: 'all FilmProjections'
      operationId: findAll
      responses:
        '200':
           description: 'OK'
           content:
              application/json:
                schema:
                  type: array
                  items:
                      $ref: '#/components/schemas/FilmProjectionOpenApiModel'
    post:
      tags:
        - FilmProjection
      summary: 'create new filmProjection'
      operationId: create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilmProjectionOpenApiModel'
      responses:
        '201':
          description: CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilmProjectionOpenApiModel'
    put:
      tags:
        - FilmProjection
      summary: 'Update existing filmProjection'
      operationId: update
      requestBody:
        description: 'Update existing filmProjection'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilmProjectionOpenApiModel'

      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilmProjectionOpenApiModel'

        '404':
          description: 'NOT FOUND'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /filmProjection/{id}:
    get:
      tags:
        - FilmProjection
      summary: 'Specific FilmProjection'
      operationId: findOne
      parameters:
        - name: id
          in: path
          description: 'Find a FilmProjection by its id'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilmProjectionOpenApiModel'
        '404':
          description: 'NOT FOUND'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - FilmProjection
      summary: 'delete a FilmProjection'
      operationId: delete
      parameters:
        - name: id
          in: path
          description: 'Find a FilmProjection by its id'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: DELETED
        '404':
          description: 'NOT FOUND'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /filmProjection/bySalle:
    get:
      tags:
        - FilmProjection
      summary: 'FilmProjection by Salle'
      operationId: findBySalle
      parameters:
        - name: salleId
          in: query
          description: 'Find projections by its salle'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FilmProjectionOpenApiModel'
        '404':
          description: 'NOT FOUND'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    'FilmProjectionOpenApiModel':
      description: 'Object representing a currently accessible ressource'
      type: object
      required:
          - dateProjection
          - film
          - salleId
      properties:
        id:
          type: integer
          format: int64
        dateProjection:
          type: string
          format: date-time
        film:
          $ref: '#/components/schemas/FilmOpenApiModel'
        salleId:
          type: integer
          format: int64

    'FilmOpenApiModel':
      description: 'Object representing a currently accessible ressource'
      type: object
      required:
        - titre
        - duree
        - realisateur
        - description
        - photo
        - dateSortie
        - categoryId
      properties:
        id:
          type: integer
          format: int64
        titre:
          type: string
        duree:
          type: number
          format: double
        realisateur:
          type: string
        description:
          type: string
        photo:
          type: string
        dateSortie:
          type: string
          format: date-time
        categoryId:
          type: integer
          format: int64

    Error:
      description: 'format message for error return HTTP'
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
        message:
          type: string






