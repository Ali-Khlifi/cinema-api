# replace film to define the default model covered by this document, first letter must be uppercase
# replace film to define the default path of endpoints in this document, first letter must be lowercase
# add missing endpoints
# N.B. : must then be added to the pom to generate the controller and its associated models

openapi: '3.0.0'
info:
  description: 'Film API'
  version: '0.0.1'
  title: 'OpenAPI Film'
tags:
  - name: Film
paths:
  /film:
    get:
      tags:
        - Film
      summary: 'all Films'
      operationId: findAll
      responses:
        '200':
           description: 'OK'
           content:
              application/json:
                schema:
                  type: array
                  items:
                      $ref: '#/components/schemas/FilmOpenApiModel'
    post:
      tags:
        - Film
      summary: 'create new film'
      operationId: create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilmOpenApiModel'
      responses:
        '201':
          description: CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilmOpenApiModel'
    put:
      tags:
        - Film
      summary: 'Update existing film'
      operationId: update
      requestBody:
        description: 'Update existing film'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilmOpenApiModel'

      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilmOpenApiModel'

        '404':
          description: 'NOT FOUND'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /film/{id}:
    get:
      tags:
        - Film
      summary: 'Specific Film'
      operationId: findOne
      parameters:
        - name: id
          in: path
          description: 'Find a Film by its id'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilmOpenApiModel'
        '404':
          description: 'NOT FOUND'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Film
      summary: 'delete a Film'
      operationId: delete
      parameters:
        - name: id
          in: path
          description: 'Find a Film by its id'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: DELETED
        '404':
          description: 'NOT FOUND'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /film/{id}/upload:
    post:
      tags:
        - Film
      summary: 'Upload image for a film'
      operationId: uploadImage
      parameters:
        - name: id
          in: path
          description: id of the film
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                photo:
                  type: string
                  format: binary
                  description: 'The image file to upload'
      responses:
        '200':
          description: 'OK saved image successfully'
        '400':
          description: 'Bad request, incorrect or missing parameters'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /imageFilm/{id}:
    get:
      tags:
        - Film
      summary: 'get image from a film'
      operationId: readImages
      parameters:
        - name: id
          in: path
          description: 'Find image film by its id'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'OK succeeded'
          content:
            application/avro:
              schema:
                type: string
                format: byte

        '404':
          description: 'NOT FOUND'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    'FilmOpenApiModel':
      description: 'Object representing a currently accessible ressource'
      type: object
      required:
          - titre
          - duree
          - realisateur
          - description
          - photo
          - dateSortie
          - filmProjections
          - categoryId
      properties:
        id:
          type: integer
          format: int64
        titre:
          type: string
        duree:
          type: number
          format: double
        realisateur:
          type: string
        description:
          type: string
        photo:
          type: string
        dateSortie:
          type: string
          format: date-time
        filmProjections:
          type: array
          items:
            $ref: '#/components/schemas/FilmProjectionOpenApiModel'
        categoryId:
          type: integer
          format: int64

    'FilmProjectionOpenApiModel':
      type: object
      properties:
        id:
          type: integer
          format: int64
        dateProjection:
          type: string
          format: date-time
        prix:
          type: number
          format: double

    Error:
      description: 'format message for error return HTTP'
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
        message:
          type: string






